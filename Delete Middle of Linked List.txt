Delete Middle of Linked List 
Easy (GfG)

Given a singly linked list, delete middle of the linked list. For example, if given linked list is 1->2->3->4->5 then linked list should be modified to 1->2->4->5.
If there are even nodes, then there would be two middle nodes, we need to delete the second middle element. For example, if given linked list is 1->2->3->4->5->6 then it should be modified to 1->2->3->5->6.
If the input linked list is NULL or has 1 node, then it should return NULL

Example 1:

Input:
LinkedList: 1->2->3->4->5
Output: 1 2 4 5

/* Link list Node:

struct Node
{
    int data;
    struct Node* next;

    Node(int x){
        data = x;
        next = NULL;
    }
};

*/

// Deletes middle of linked list and returns head of the modified list
Node* deleteMid(Node* head)
{
    // Your Code Here
    Node *curr = head;
    int count = 0;
    int temp = 0 ;
    while(curr != NULL)
    {
        count++;
        curr = curr->next;
    }
    
    curr = head ; 
    int mid = (count / 2 );
    
    while( mid-- > 1)
    {
      curr = curr->next ;
     // temp++ ;
      
    }
    
   
    curr->next = curr->next->next;
    
    
    return head;

}