Remove duplicates from an unsorted linked list 
Easy (GfG)

Given an unsorted linked list of N nodes. The task is to remove duplicate elements from this unsorted Linked List. When a value appears in multiple nodes, the node which appeared first should be kept, all others duplicates are to be removed.

Example 1:

Input:
N = 4
value[] = {5,2,2,4}
Output: 5 2 4
Explanation:Given linked list elements are
5->2->2->4, in which 2 is repeated only.
So, we will delete the extra repeated
elements 2 from the linked list and the
resultant linked list will contain 5->2->4

/*
The structure of linked list is the following

struct Node {
  int data;
  struct Node *next;
  Node(int x) {
    data = x;
    next = NULL;
  }
};
*/


class Solution
{
    public:
    //Function to remove duplicates from unsorted linked list.
    Node * removeDuplicates( Node *head) 
    {
     // your code goes here
     unordered_set<int> s;
     
    struct Node *curr = head;
    struct Node *prev = NULL;
     
     while(curr != NULL)
     {
        if (s.find(curr->data) != s.end())
        {
           prev->next = curr->next;
           delete (curr);
        }
        else
        {
           s.insert(curr->data);
           prev = curr;
        }
        curr = prev->next;
    }
    return head;
    }
};