Remove Nth Node From End of List
Medium (Leetcode)

Given the head of a linked list, remove the nth node from the end of the list and return its head.

Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        
        if(head==NULL) return head;
        if(head->next == NULL && n==1 ) return NULL;
        
        ListNode *curr = head;
        int count = 0;
        
        while(curr != NULL)
        {
            count++;  
            curr = curr->next;
        }
        
        if(count == n){
        head = head->next;
        return head;
        }
        
        curr = head;
        count = count - n;
        int i = 1;
        while(curr->next!=NULL && i< count)
        {
            curr = curr->next;
            i++;
        }
        
        ListNode *deletenode = curr->next;
        
        curr->next = curr->next->next;
        
        delete deletenode;
        
        return head;
        
        
    }
};